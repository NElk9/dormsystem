{"version":3,"file":"js/4.704e7a09.js","mappings":"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","sources":["webpack://counsellor/./node_modules/@vicons/material/es/SearchRound.js","webpack://counsellor/./node_modules/naive-ui/es/form/src/styles/form.cssr.js","webpack://counsellor/./node_modules/naive-ui/es/form/src/Form.js","webpack://counsellor/../../src/util.ts","webpack://counsellor/../../src/rule/required.ts","webpack://counsellor/../../src/rule/url.ts","webpack://counsellor/../../src/rule/whitespace.ts","webpack://counsellor/../../src/rule/type.ts","webpack://counsellor/../../src/rule/range.ts","webpack://counsellor/../../src/rule/enum.ts","webpack://counsellor/../../src/rule/pattern.ts","webpack://counsellor/../../src/rule/index.ts","webpack://counsellor/../../src/validator/string.ts","webpack://counsellor/../../src/validator/method.ts","webpack://counsellor/../../src/validator/number.ts","webpack://counsellor/../../src/validator/boolean.ts","webpack://counsellor/../../src/validator/regexp.ts","webpack://counsellor/../../src/validator/integer.ts","webpack://counsellor/../../src/validator/float.ts","webpack://counsellor/../../src/validator/array.ts","webpack://counsellor/../../src/validator/object.ts","webpack://counsellor/../../src/validator/enum.ts","webpack://counsellor/../../src/validator/pattern.ts","webpack://counsellor/../../src/validator/date.ts","webpack://counsellor/../../src/validator/required.ts","webpack://counsellor/../../src/validator/type.ts","webpack://counsellor/../../src/validator/any.ts","webpack://counsellor/../../src/validator/index.ts","webpack://counsellor/../../src/messages.ts","webpack://counsellor/../../src/index.ts","webpack://counsellor/./node_modules/naive-ui/es/_utils/composable/use-collection.js","webpack://counsellor/./node_modules/naive-ui/es/form/src/utils.js","webpack://counsellor/./node_modules/naive-ui/es/_styles/transitions/fade-down.cssr.js","webpack://counsellor/./node_modules/naive-ui/es/form/src/styles/form-item.cssr.js","webpack://counsellor/./node_modules/naive-ui/es/form/src/FormItem.js","webpack://counsellor/./node_modules/naive-ui/es/form/src/context.js","webpack://counsellor/./node_modules/naive-ui/es/form/styles/_common.js","webpack://counsellor/./node_modules/naive-ui/es/form/styles/light.js"],"sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, defineComponent } from 'vue'\nconst _hoisted_1 = {\n  xmlns: 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  viewBox: '0 0 24 24'\n}\nconst _hoisted_2 = /*#__PURE__*/ _createElementVNode(\n  'path',\n  {\n    d: 'M15.5 14h-.79l-.28-.27a6.5 6.5 0 0 0 1.48-5.34c-.47-2.78-2.79-5-5.59-5.34a6.505 6.505 0 0 0-7.27 7.27c.34 2.8 2.56 5.12 5.34 5.59a6.5 6.5 0 0 0 5.34-1.48l.27.28v.79l4.25 4.25c.41.41 1.08.41 1.49 0c.41-.41.41-1.08 0-1.49L15.5 14zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5S14 7.01 14 9.5S11.99 14 9.5 14z',\n    fill: 'currentColor'\n  },\n  null,\n  -1\n  /* HOISTED */\n)\nconst _hoisted_3 = [_hoisted_2]\nexport default defineComponent({\n  name: 'SearchRound',\n  render: function render(_ctx, _cache) {\n    return _openBlock(), _createElementBlock('svg', _hoisted_1, _hoisted_3)\n  }\n})\n","import { c, cB, cM } from '../../../_utils/cssr';\nexport default cB('form', [cM('inline', `\n width: 100%;\n display: inline-flex;\n align-items: flex-start;\n align-content: space-around;\n `, [cB('form-item', {\n  width: 'auto',\n  marginRight: '18px'\n}, [c('&:last-child', {\n  marginRight: 0\n})])])]);","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { h, defineComponent, provide, ref } from 'vue';\nimport { useConfig, useTheme } from '../../_mixins';\nimport { formLight } from '../styles';\nimport style from './styles/form.cssr';\nimport { keysOf } from '../../_utils';\nimport { formInjectionKey, formItemInstsInjectionKey } from './context';\nexport const formProps = Object.assign(Object.assign({}, useTheme.props), { inline: Boolean, labelWidth: [Number, String], labelAlign: String, labelPlacement: {\n        type: String,\n        default: 'top'\n    }, model: {\n        type: Object,\n        default: () => { }\n    }, rules: Object, disabled: Boolean, size: String, showRequireMark: {\n        type: Boolean,\n        default: undefined\n    }, requireMarkPlacement: String, showFeedback: {\n        type: Boolean,\n        default: true\n    }, onSubmit: {\n        type: Function,\n        default: (e) => e.preventDefault()\n    }, showLabel: {\n        type: Boolean,\n        default: undefined\n    }, validateMessages: Object });\nexport default defineComponent({\n    name: 'Form',\n    props: formProps,\n    setup(props) {\n        const { mergedClsPrefixRef } = useConfig(props);\n        useTheme('Form', '-form', style, formLight, props, mergedClsPrefixRef);\n        // from path to form-item\n        const formItems = {};\n        // for label-width = 'auto'\n        const maxChildLabelWidthRef = ref(undefined);\n        const deriveMaxChildLabelWidth = (currentWidth) => {\n            const currentMaxChildLabelWidth = maxChildLabelWidthRef.value;\n            if (currentMaxChildLabelWidth === undefined ||\n                currentWidth >= currentMaxChildLabelWidth) {\n                maxChildLabelWidthRef.value = currentWidth;\n            }\n        };\n        function validate(validateCallback, shouldRuleBeApplied = () => true) {\n            return __awaiter(this, void 0, void 0, function* () {\n                return yield new Promise((resolve, reject) => {\n                    const formItemValidationPromises = [];\n                    for (const key of keysOf(formItems)) {\n                        const formItemInstances = formItems[key];\n                        for (const formItemInstance of formItemInstances) {\n                            if (formItemInstance.path) {\n                                formItemValidationPromises.push(formItemInstance.internalValidate(null, shouldRuleBeApplied));\n                            }\n                        }\n                    }\n                    void Promise.all(formItemValidationPromises).then((results) => {\n                        if (results.some((result) => !result.valid)) {\n                            const errors = results\n                                .filter((result) => result.errors)\n                                .map((result) => result.errors);\n                            if (validateCallback) {\n                                validateCallback(errors);\n                            }\n                            reject(errors);\n                        }\n                        else {\n                            if (validateCallback)\n                                validateCallback();\n                            resolve();\n                        }\n                    });\n                });\n            });\n        }\n        function restoreValidation() {\n            for (const key of keysOf(formItems)) {\n                const formItemInstances = formItems[key];\n                for (const formItemInstance of formItemInstances) {\n                    formItemInstance.restoreValidation();\n                }\n            }\n        }\n        provide(formInjectionKey, {\n            props,\n            maxChildLabelWidthRef,\n            deriveMaxChildLabelWidth\n        });\n        provide(formItemInstsInjectionKey, { formItems });\n        const formExposedMethod = {\n            validate,\n            restoreValidation\n        };\n        return Object.assign(formExposedMethod, {\n            mergedClsPrefix: mergedClsPrefixRef\n        });\n    },\n    render() {\n        const { mergedClsPrefix } = this;\n        return (h(\"form\", { class: [\n                `${mergedClsPrefix}-form`,\n                this.inline && `${mergedClsPrefix}-form--inline`\n            ], onSubmit: this.onSubmit }, this.$slots));\n    }\n});\n","/* eslint no-console:0 */\n\nimport {\n  ValidateError,\n  ValidateOption,\n  RuleValuePackage,\n  InternalRuleItem,\n  SyncErrorType,\n  RuleType,\n  Value,\n  Values,\n} from './interface';\n\nconst formatRegExp = /%[sdj%]/g;\n\ndeclare var ASYNC_VALIDATOR_NO_WARNING;\n\nexport let warning: (type: string, errors: SyncErrorType[]) => void = () => {};\n\n// don't print warning message when in production env or node runtime\nif (\n  typeof process !== 'undefined' &&\n  process.env &&\n  process.env.NODE_ENV !== 'production' &&\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined'\n) {\n  warning = (type, errors) => {\n    if (\n      typeof console !== 'undefined' &&\n      console.warn &&\n      typeof ASYNC_VALIDATOR_NO_WARNING === 'undefined'\n    ) {\n      if (errors.every(e => typeof e === 'string')) {\n        console.warn(type, errors);\n      }\n    }\n  };\n}\n\nexport function convertFieldsError(\n  errors: ValidateError[],\n): Record<string, ValidateError[]> {\n  if (!errors || !errors.length) return null;\n  const fields = {};\n  errors.forEach(error => {\n    const field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\n\nexport function format(\n  template: ((...args: any[]) => string) | string,\n  ...args: any[]\n): string {\n  let i = 0;\n  const len = args.length;\n  if (typeof template === 'function') {\n    return template.apply(null, args);\n  }\n  if (typeof template === 'string') {\n    let str = template.replace(formatRegExp, x => {\n      if (x === '%%') {\n        return '%';\n      }\n      if (i >= len) {\n        return x;\n      }\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n        case '%d':\n          return (Number(args[i++]) as unknown) as string;\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n          break;\n        default:\n          return x;\n      }\n    });\n    return str;\n  }\n  return template;\n}\n\nfunction isNativeStringType(type: string) {\n  return (\n    type === 'string' ||\n    type === 'url' ||\n    type === 'hex' ||\n    type === 'email' ||\n    type === 'date' ||\n    type === 'pattern'\n  );\n}\n\nexport function isEmptyValue(value: Value, type?: string) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n  if (type === 'array' && Array.isArray(value) && !value.length) {\n    return true;\n  }\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\n    return true;\n  }\n  return false;\n}\n\nexport function isEmptyObject(obj: object) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction asyncParallelArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  const results: ValidateError[] = [];\n  let total = 0;\n  const arrLength = arr.length;\n\n  function count(errors: ValidateError[]) {\n    results.push(...(errors || []));\n    total++;\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n\n  arr.forEach(a => {\n    func(a, count);\n  });\n}\n\nfunction asyncSerialArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  let index = 0;\n  const arrLength = arr.length;\n\n  function next(errors: ValidateError[]) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n    const original = index;\n    index = index + 1;\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n\n  next([]);\n}\n\nfunction flattenObjArr(objArr: Record<string, RuleValuePackage[]>) {\n  const ret: RuleValuePackage[] = [];\n  Object.keys(objArr).forEach(k => {\n    ret.push(...(objArr[k] || []));\n  });\n  return ret;\n}\n\nexport class AsyncValidationError extends Error {\n  errors: ValidateError[];\n  fields: Record<string, ValidateError[]>;\n\n  constructor(\n    errors: ValidateError[],\n    fields: Record<string, ValidateError[]>,\n  ) {\n    super('Async Validation Error');\n    this.errors = errors;\n    this.fields = fields;\n  }\n}\n\ntype ValidateFunc = (\n  data: RuleValuePackage,\n  doIt: (errors: ValidateError[]) => void,\n) => void;\n\nexport function asyncMap(\n  objArr: Record<string, RuleValuePackage[]>,\n  option: ValidateOption,\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n  source: Values,\n): Promise<Values> {\n  if (option.first) {\n    const pending = new Promise<Values>((resolve, reject) => {\n      const next = (errors: ValidateError[]) => {\n        callback(errors);\n        return errors.length\n          ? reject(new AsyncValidationError(errors, convertFieldsError(errors)))\n          : resolve(source);\n      };\n      const flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n    pending.catch(e => e);\n    return pending;\n  }\n  const firstFields =\n    option.firstFields === true\n      ? Object.keys(objArr)\n      : option.firstFields || [];\n\n  const objArrKeys = Object.keys(objArr);\n  const objArrLength = objArrKeys.length;\n  let total = 0;\n  const results: ValidateError[] = [];\n  const pending = new Promise<Values>((resolve, reject) => {\n    const next = (errors: ValidateError[]) => {\n      results.push.apply(results, errors);\n      total++;\n      if (total === objArrLength) {\n        callback(results);\n        return results.length\n          ? reject(\n              new AsyncValidationError(results, convertFieldsError(results)),\n            )\n          : resolve(source);\n      }\n    };\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve(source);\n    }\n    objArrKeys.forEach(key => {\n      const arr = objArr[key];\n      if (firstFields.indexOf(key) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending.catch(e => e);\n  return pending;\n}\n\nfunction isErrorObj(\n  obj: ValidateError | string | (() => string),\n): obj is ValidateError {\n  return !!(obj && (obj as ValidateError).message !== undefined);\n}\n\nfunction getValue(value: Values, path: string[]) {\n  let v = value;\n  for (let i = 0; i < path.length; i++) {\n    if (v == undefined) {\n      return v;\n    }\n    v = v[path[i]];\n  }\n  return v;\n}\n\nexport function complementError(rule: InternalRuleItem, source: Values) {\n  return (oe: ValidateError | (() => string) | string): ValidateError => {\n    let fieldValue;\n    if (rule.fullFields) {\n      fieldValue = getValue(source, rule.fullFields);\n    } else {\n      fieldValue = source[(oe as any).field || rule.fullField];\n    }\n    if (isErrorObj(oe)) {\n      oe.field = oe.field || rule.fullField;\n      oe.fieldValue = fieldValue;\n      return oe;\n    }\n    return {\n      message: typeof oe === 'function' ? oe() : oe,\n      fieldValue,\n      field: ((oe as unknown) as ValidateError).field || rule.fullField,\n    };\n  };\n}\n\nexport function deepMerge<T extends object>(target: T, source: Partial<T>): T {\n  if (source) {\n    for (const s in source) {\n      if (source.hasOwnProperty(s)) {\n        const value = source[s];\n        if (typeof value === 'object' && typeof target[s] === 'object') {\n          target[s] = {\n            ...target[s],\n            ...value,\n          };\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n  return target;\n}\n","import { ExecuteRule } from '../interface';\nimport { format, isEmptyValue } from '../util';\n\nconst required: ExecuteRule = (rule, value, source, errors, options, type) => {\n  if (\n    rule.required &&\n    (!source.hasOwnProperty(rule.field) ||\n      isEmptyValue(value, type || rule.type))\n  ) {\n    errors.push(format(options.messages.required, rule.fullField));\n  }\n};\n\nexport default required;\n","// https://github.com/kevva/url-regex/blob/master/index.js\nlet urlReg: RegExp;\n\nexport default () => {\n  if (urlReg) {\n    return urlReg;\n  }\n\n  const word = '[a-fA-F\\\\d:]';\n  const b = options =>\n    options && options.includeBoundaries\n      ? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))`\n      : '';\n\n  const v4 =\n    '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\n  const v6seg = '[a-fA-F\\\\d]{1,4}';\n  const v6 = `\n(?:\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`\n    .replace(/\\s*\\/\\/.*$/gm, '')\n    .replace(/\\n/g, '')\n    .trim();\n\n  // Pre-compile only the exact regexes because adding a global flag make regexes stateful\n  const v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\n  const v4exact = new RegExp(`^${v4}$`);\n  const v6exact = new RegExp(`^${v6}$`);\n\n  const ip = options =>\n    options && options.exact\n      ? v46Exact\n      : new RegExp(\n          `(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(\n            options,\n          )})`,\n          'g',\n        );\n\n  ip.v4 = (options?) =>\n    options && options.exact\n      ? v4exact\n      : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\n  ip.v6 = (options?) =>\n    options && options.exact\n      ? v6exact\n      : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\n  const protocol = `(?:(?:[a-z]+:)?//)`;\n  const auth = '(?:\\\\S+(?::\\\\S*)?@)?';\n  const ipv4 = ip.v4().source;\n  const ipv6 = ip.v6().source;\n  const host = '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9][-_]*)*[a-z\\\\u00a1-\\\\uffff0-9]+)';\n  const domain =\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*';\n  const tld = `(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))`;\n  const port = '(?::\\\\d{2,5})?';\n  const path = '(?:[/?#][^\\\\s\"]*)?';\n  const regex = `(?:${protocol}|www\\\\.)${auth}(?:localhost|${ipv4}|${ipv6}|${host}${domain}${tld})${port}${path}`;\n  urlReg = new RegExp(`(?:^${regex}$)`, 'i');\n  return urlReg;\n};\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nconst whitespace: ExecuteRule = (rule, value, source, errors, options) => {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(format(options.messages.whitespace, rule.fullField));\n  }\n};\n\nexport default whitespace;\n","import { ExecuteRule, Value } from '../interface';\nimport { format } from '../util';\nimport required from './required';\nimport getUrlRegex from './url';\n/* eslint max-len:0 */\n\nconst pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+\\.)+[a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}))$/,\n  // url: new RegExp(\n  //   '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$',\n  //   'i',\n  // ),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,\n};\n\nconst types = {\n  integer(value: Value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  float(value: Value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array(value: Value) {\n    return Array.isArray(value);\n  },\n  regexp(value: Value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date(value: Value) {\n    return (\n      typeof value.getTime === 'function' &&\n      typeof value.getMonth === 'function' &&\n      typeof value.getYear === 'function' &&\n      !isNaN(value.getTime())\n    );\n  },\n  number(value: Value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === 'number';\n  },\n  object(value: Value) {\n    return typeof value === 'object' && !types.array(value);\n  },\n  method(value: Value) {\n    return typeof value === 'function';\n  },\n  email(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 320 &&\n      !!value.match(pattern.email)\n    );\n  },\n  url(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 2048 &&\n      !!value.match(getUrlRegex())\n    );\n  },\n  hex(value: Value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  },\n};\n\nconst type: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n  const custom = [\n    'integer',\n    'float',\n    'array',\n    'regexp',\n    'object',\n    'method',\n    'email',\n    'number',\n    'date',\n    'url',\n    'hex',\n  ];\n  const ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(\n        format(options.messages.types[ruleType], rule.fullField, rule.type),\n      );\n    }\n    // straight typeof check\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(\n      format(options.messages.types[ruleType], rule.fullField, rule.type),\n    );\n  }\n};\n\nexport default type;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst range: ExecuteRule = (rule, value, source, errors, options) => {\n  const len = typeof rule.len === 'number';\n  const min = typeof rule.min === 'number';\n  const max = typeof rule.max === 'number';\n  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n  const spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  let val = value;\n  let key = null;\n  const num = typeof value === 'number';\n  const str = typeof value === 'string';\n  const arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(\n      format(options.messages[key].range, rule.fullField, rule.min, rule.max),\n    );\n  }\n};\n\nexport default range;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteRule = (rule, value, source, errors, options) => {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(\n      format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')),\n    );\n  }\n};\n\nexport default enumerable;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst pattern: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n      if (!rule.pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    } else if (typeof rule.pattern === 'string') {\n      const _pattern = new RegExp(rule.pattern);\n      if (!_pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    }\n  }\n};\n\nexport default pattern;\n","import required from './required';\nimport whitespace from './whitespace';\nimport type from './type';\nimport range from './range';\nimport enumRule from './enum';\nimport pattern from './pattern';\n\nexport default {\n  required,\n  whitespace,\n  type,\n  range,\n  enum: enumRule,\n  pattern,\n};\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst string: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'string');\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default string;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst method: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default method;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst number: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (value === '') {\n      value = undefined;\n    }\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default number;\n","import { isEmptyValue } from '../util';\nimport rules from '../rule';\nimport { ExecuteValidator } from '../interface';\n\nconst boolean: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default boolean;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst regexp: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default regexp;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst integer: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default integer;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst floatFn: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default floatFn;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule/index';\n\nconst array: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'array');\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default array;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst object: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default object;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteValidator = (\n  rule,\n  value,\n  callback,\n  source,\n  options,\n) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default enumerable;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst pattern: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'string')) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default pattern;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst date: ExecuteValidator = (rule, value, callback, source, options) => {\n  // console.log('integer rule called %j', rule);\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  // console.log('validate on %s value', value);\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'date')) {\n      let dateObject;\n\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default date;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\n\nconst required: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const type = Array.isArray(value) ? 'array' : typeof value;\n  rules.required(rule, value, source, errors, options, type);\n  callback(errors);\n};\n\nexport default required;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst type: ExecuteValidator = (rule, value, callback, source, options) => {\n  const ruleType = rule.type;\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, ruleType);\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default type;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst any: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n  }\n  callback(errors);\n};\n\nexport default any;\n","import string from './string';\nimport method from './method';\nimport number from './number';\nimport boolean from './boolean';\nimport regexp from './regexp';\nimport integer from './integer';\nimport float from './float';\nimport array from './array';\nimport object from './object';\nimport enumValidator from './enum';\nimport pattern from './pattern';\nimport date from './date';\nimport required from './required';\nimport type from './type';\nimport any from './any';\n\nexport default {\n  string,\n  method,\n  number,\n  boolean,\n  regexp,\n  integer,\n  float,\n  array,\n  object,\n  enum: enumValidator,\n  pattern,\n  date,\n  url: type,\n  hex: type,\n  email: type,\n  required,\n  any,\n};\n","import { InternalValidateMessages } from './interface';\n\nexport function newMessages(): InternalValidateMessages {\n  return {\n    default: 'Validation error on field %s',\n    required: '%s is required',\n    enum: '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid',\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      boolean: '%s is not a %s',\n      integer: '%s is not an %s',\n      float: '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s',\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters',\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s',\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length',\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s',\n    },\n    clone() {\n      const cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    },\n  };\n}\n\nexport const messages = newMessages();\n","import {\n  format,\n  complementError,\n  asyncMap,\n  warning,\n  deepMerge,\n  convertFieldsError,\n} from './util';\nimport validators from './validator/index';\nimport { messages as defaultMessages, newMessages } from './messages';\nimport {\n  InternalRuleItem,\n  InternalValidateMessages,\n  Rule,\n  RuleItem,\n  Rules,\n  ValidateCallback,\n  ValidateMessages,\n  ValidateOption,\n  Values,\n  RuleValuePackage,\n  ValidateError,\n  ValidateFieldsError,\n  SyncErrorType,\n  ValidateResult,\n} from './interface';\n\nexport * from './interface';\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nclass Schema {\n  // ========================= Static =========================\n  static register = function register(type: string, validator) {\n    if (typeof validator !== 'function') {\n      throw new Error(\n        'Cannot register a validator by type, validator is not a function',\n      );\n    }\n    validators[type] = validator;\n  };\n\n  static warning = warning;\n\n  static messages = defaultMessages;\n\n  static validators = validators;\n\n  // ======================== Instance ========================\n  rules: Record<string, RuleItem[]> = null;\n  _messages: InternalValidateMessages = defaultMessages;\n\n  constructor(descriptor: Rules) {\n    this.define(descriptor);\n  }\n\n  define(rules: Rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n\n    Object.keys(rules).forEach(name => {\n      const item: Rule = rules[name];\n      this.rules[name] = Array.isArray(item) ? item : [item];\n    });\n  }\n\n  messages(messages?: ValidateMessages) {\n    if (messages) {\n      this._messages = deepMerge(newMessages(), messages);\n    }\n    return this._messages;\n  }\n\n  validate(\n    source: Values,\n    option?: ValidateOption,\n    callback?: ValidateCallback,\n  ): Promise<Values>;\n  validate(source: Values, callback: ValidateCallback): Promise<Values>;\n  validate(source: Values): Promise<Values>;\n\n  validate(source_: Values, o: any = {}, oc: any = () => {}): Promise<Values> {\n    let source: Values = source_;\n    let options: ValidateOption = o;\n    let callback: ValidateCallback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback(null, source);\n      }\n      return Promise.resolve(source);\n    }\n\n    function complete(results: (ValidateError | ValidateError[])[]) {\n      let errors: ValidateError[] = [];\n      let fields: ValidateFieldsError = {};\n\n      function add(e: ValidateError | ValidateError[]) {\n        if (Array.isArray(e)) {\n          errors = errors.concat(...e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (let i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        callback(null, source);\n      } else {\n        fields = convertFieldsError(errors);\n        (callback as (\n          errors: ValidateError[],\n          fields: ValidateFieldsError,\n        ) => void)(errors, fields);\n      }\n    }\n\n    if (options.messages) {\n      let messages = this.messages();\n      if (messages === defaultMessages) {\n        messages = newMessages();\n      }\n      deepMerge(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n\n    const series: Record<string, RuleValuePackage[]> = {};\n    const keys = options.keys || Object.keys(this.rules);\n    keys.forEach(z => {\n      const arr = this.rules[z];\n      let value = source[z];\n      arr.forEach(r => {\n        let rule: InternalRuleItem = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = { ...source };\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule,\n          };\n        } else {\n          rule = { ...rule };\n        }\n\n        // Fill validator. Skip if nothing need to validate\n        rule.validator = this.getValidationMethod(rule);\n        if (!rule.validator) {\n          return;\n        }\n\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = this.getType(rule);\n        series[z] = series[z] || [];\n        series[z].push({\n          rule,\n          value,\n          source,\n          field: z,\n        });\n      });\n    });\n    const errorFields = {};\n    return asyncMap(\n      series,\n      options,\n      (data, doIt) => {\n        const rule = data.rule;\n        let deep =\n          (rule.type === 'object' || rule.type === 'array') &&\n          (typeof rule.fields === 'object' ||\n            typeof rule.defaultField === 'object');\n        deep = deep && (rule.required || (!rule.required && data.value));\n        rule.field = data.field;\n\n        function addFullField(key: string, schema: RuleItem) {\n          return {\n            ...schema,\n            fullField: `${rule.fullField}.${key}`,\n            fullFields: rule.fullFields ? [...rule.fullFields, key] : [key],\n          };\n        }\n\n        function cb(e: SyncErrorType | SyncErrorType[] = []) {\n          let errorList = Array.isArray(e) ? e : [e];\n          if (!options.suppressWarning && errorList.length) {\n            Schema.warning('async-validator:', errorList);\n          }\n          if (errorList.length && rule.message !== undefined) {\n            errorList = [].concat(rule.message);\n          }\n\n          // Fill error info\n          let filledErrors = errorList.map(complementError(rule, source));\n\n          if (options.first && filledErrors.length) {\n            errorFields[rule.field] = 1;\n            return doIt(filledErrors);\n          }\n          if (!deep) {\n            doIt(filledErrors);\n          } else {\n            // if rule is required but the target object\n            // does not exist fail at the rule level and don't\n            // go deeper\n            if (rule.required && !data.value) {\n              if (rule.message !== undefined) {\n                filledErrors = []\n                  .concat(rule.message)\n                  .map(complementError(rule, source));\n              } else if (options.error) {\n                filledErrors = [\n                  options.error(\n                    rule,\n                    format(options.messages.required, rule.field),\n                  ),\n                ];\n              }\n              return doIt(filledErrors);\n            }\n\n            let fieldsSchema: Record<string, Rule> = {};\n            if (rule.defaultField) {\n              Object.keys(data.value).map(key => {\n                fieldsSchema[key] = rule.defaultField;\n              });\n            }\n            fieldsSchema = {\n              ...fieldsSchema,\n              ...data.rule.fields,\n            };\n\n            const paredFieldsSchema: Record<string, RuleItem[]> = {};\n\n            Object.keys(fieldsSchema).forEach(field => {\n              const fieldSchema = fieldsSchema[field];\n              const fieldSchemaList = Array.isArray(fieldSchema)\n                ? fieldSchema\n                : [fieldSchema];\n              paredFieldsSchema[field] = fieldSchemaList.map(\n                addFullField.bind(null, field),\n              );\n            });\n            const schema = new Schema(paredFieldsSchema);\n            schema.messages(options.messages);\n            if (data.rule.options) {\n              data.rule.options.messages = options.messages;\n              data.rule.options.error = options.error;\n            }\n            schema.validate(data.value, data.rule.options || options, errs => {\n              const finalErrors = [];\n              if (filledErrors && filledErrors.length) {\n                finalErrors.push(...filledErrors);\n              }\n              if (errs && errs.length) {\n                finalErrors.push(...errs);\n              }\n              doIt(finalErrors.length ? finalErrors : null);\n            });\n          }\n        }\n\n        let res: ValidateResult;\n        if (rule.asyncValidator) {\n          res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n        } else if (rule.validator) {\n          try {\n            res = rule.validator(rule, data.value, cb, data.source, options);\n          } catch (error) {\n            console.error?.(error);\n            // rethrow to report error\n            if (!options.suppressValidatorError) {\n              setTimeout(() => {\n                throw error;\n              }, 0);\n            }\n            cb(error.message);\n          }\n          if (res === true) {\n            cb();\n          } else if (res === false) {\n            cb(\n              typeof rule.message === 'function'\n                ? rule.message(rule.fullField || rule.field)\n                : rule.message || `${rule.fullField || rule.field} fails`,\n            );\n          } else if (res instanceof Array) {\n            cb(res);\n          } else if (res instanceof Error) {\n            cb(res.message);\n          }\n        }\n        if (res && (res as Promise<void>).then) {\n          (res as Promise<void>).then(\n            () => cb(),\n            e => cb(e),\n          );\n        }\n      },\n      results => {\n        complete(results);\n      },\n      source,\n    );\n  }\n\n  getType(rule: InternalRuleItem) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (\n      typeof rule.validator !== 'function' &&\n      rule.type &&\n      !validators.hasOwnProperty(rule.type)\n    ) {\n      throw new Error(format('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  }\n\n  getValidationMethod(rule: InternalRuleItem) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    const keys = Object.keys(rule);\n    const messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return validators.required;\n    }\n    return validators[this.getType(rule)] || undefined;\n  }\n}\n\nexport default Schema;\n","import { watch, onMounted, inject, getCurrentInstance, onBeforeUnmount } from 'vue';\n// injection.collection {\n//   key1: [insta, instb]\n//   key2: [instc]\n// }\nexport function useInjectionInstanceCollection(injectionName, collectionKey, registerKeyRef) {\n    var _a;\n    const injection = inject(injectionName, null);\n    if (injection === null)\n        return;\n    const vm = (_a = getCurrentInstance()) === null || _a === void 0 ? void 0 : _a.proxy;\n    watch(registerKeyRef, registerInstance);\n    registerInstance(registerKeyRef.value);\n    onBeforeUnmount(() => {\n        registerInstance(undefined, registerKeyRef.value);\n    });\n    function registerInstance(key, oldKey) {\n        const collection = injection[collectionKey];\n        if (oldKey !== undefined)\n            removeInstance(collection, oldKey);\n        if (key !== undefined)\n            addInstance(collection, key);\n    }\n    function removeInstance(collection, key) {\n        if (!collection[key])\n            collection[key] = [];\n        collection[key].splice(collection[key].findIndex((instance) => instance === vm), 1);\n    }\n    function addInstance(collection, key) {\n        if (!collection[key])\n            collection[key] = [];\n        if (!~collection[key].findIndex((instance) => instance === vm)) {\n            collection[key].push(vm);\n        }\n    }\n}\n// injection.collection {\n//   key1: [insta.value, instb.value]\n//   key2: [instc.value]\n// }\nexport function useInjectionCollection(injectionName, collectionKey, valueRef) {\n    const injection = inject(injectionName, null);\n    if (injection === null)\n        return;\n    if (!(collectionKey in injection)) {\n        injection[collectionKey] = [];\n    }\n    injection[collectionKey].push(valueRef.value);\n    watch(valueRef, (value, prevValue) => {\n        const collectionArray = injection[collectionKey];\n        const index = collectionArray.findIndex((collectionValue) => collectionValue === prevValue);\n        if (~index)\n            collectionArray.splice(index, 1);\n        collectionArray.push(value);\n    });\n    onBeforeUnmount(() => {\n        const collectionArray = injection[collectionKey];\n        const index = collectionArray.findIndex((collectionValue) => collectionValue === valueRef.value);\n        if (~index)\n            collectionArray.splice(index, 1);\n    });\n}\n// injection.collection {\n//   key1: [insta.$el, instb.$el]\n//   key2: [instc.$el]\n// }\nexport function useInjectionElementCollection(injectionName, collectionKey, getElement) {\n    const injection = inject(injectionName, null);\n    if (injection === null)\n        return;\n    if (!(collectionKey in injection)) {\n        injection[collectionKey] = [];\n    }\n    onMounted(() => {\n        const el = getElement();\n        if (!el)\n            return;\n        injection[collectionKey].push(el);\n    });\n    onBeforeUnmount(() => {\n        const collectionArray = injection[collectionKey];\n        const element = getElement();\n        const index = collectionArray.findIndex((collectionElement) => collectionElement === element);\n        if (~index)\n            collectionArray.splice(index, 1);\n    });\n}\n","import { inject, computed, ref } from 'vue';\nimport { get } from 'lodash-es';\nimport { formInjectionKey } from './context';\nimport { formatLength } from '../../_utils';\nexport function formItemSize(props) {\n    const NForm = inject(formInjectionKey, null);\n    return {\n        mergedSize: computed(() => {\n            if (props.size !== undefined)\n                return props.size;\n            if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.size) !== undefined)\n                return NForm.props.size;\n            return 'medium';\n        })\n    };\n}\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function formItemMisc(props) {\n    const NForm = inject(formInjectionKey, null);\n    const mergedLabelWidthRef = computed(() => {\n        if (mergedLabelPlacementRef.value === 'top')\n            return;\n        const { labelWidth } = props;\n        if (labelWidth !== undefined && labelWidth !== 'auto') {\n            return formatLength(labelWidth);\n        }\n        if (labelWidth === 'auto' || (NForm === null || NForm === void 0 ? void 0 : NForm.props.labelWidth) === 'auto') {\n            const autoComputedWidth = NForm === null || NForm === void 0 ? void 0 : NForm.maxChildLabelWidthRef.value;\n            if (autoComputedWidth !== undefined) {\n                return formatLength(autoComputedWidth);\n            }\n            else {\n                return undefined;\n            }\n        }\n        if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.labelWidth) !== undefined) {\n            return formatLength(NForm.props.labelWidth);\n        }\n        return undefined;\n    });\n    const mergedLabelPlacementRef = computed(() => {\n        const { labelPlacement } = props;\n        if (labelPlacement !== undefined)\n            return labelPlacement;\n        if (NForm === null || NForm === void 0 ? void 0 : NForm.props.labelPlacement)\n            return NForm.props.labelPlacement;\n        return 'top';\n    });\n    const mergedLabelAlignRef = computed(() => {\n        const { labelAlign } = props;\n        if (labelAlign)\n            return labelAlign;\n        if (NForm === null || NForm === void 0 ? void 0 : NForm.props.labelAlign)\n            return NForm.props.labelAlign;\n        return undefined;\n    });\n    const mergedLabelStyleRef = computed(() => {\n        var _a;\n        return [\n            (_a = props.labelProps) === null || _a === void 0 ? void 0 : _a.style,\n            props.labelStyle,\n            {\n                width: mergedLabelWidthRef.value\n            }\n        ];\n    });\n    const mergedShowRequireMarkRef = computed(() => {\n        const { showRequireMark } = props;\n        if (showRequireMark !== undefined)\n            return showRequireMark;\n        return NForm === null || NForm === void 0 ? void 0 : NForm.props.showRequireMark;\n    });\n    const mergedRequireMarkPlacementRef = computed(() => {\n        const { requireMarkPlacement } = props;\n        if (requireMarkPlacement !== undefined)\n            return requireMarkPlacement;\n        return (NForm === null || NForm === void 0 ? void 0 : NForm.props.requireMarkPlacement) || 'right';\n    });\n    const validationErroredRef = ref(false);\n    const mergedValidationStatusRef = computed(() => {\n        const { validationStatus } = props;\n        if (validationStatus !== undefined)\n            return validationStatus;\n        if (validationErroredRef.value)\n            return 'error';\n        return undefined;\n    });\n    const mergedShowFeedbackRef = computed(() => {\n        const { showFeedback } = props;\n        if (showFeedback !== undefined)\n            return showFeedback;\n        if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.showFeedback) !== undefined)\n            return NForm.props.showFeedback;\n        return true;\n    });\n    const mergedShowLabelRef = computed(() => {\n        const { showLabel } = props;\n        if (showLabel !== undefined)\n            return showLabel;\n        if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.showLabel) !== undefined)\n            return NForm.props.showLabel;\n        return true;\n    });\n    return {\n        validationErrored: validationErroredRef,\n        mergedLabelStyle: mergedLabelStyleRef,\n        mergedLabelPlacement: mergedLabelPlacementRef,\n        mergedLabelAlign: mergedLabelAlignRef,\n        mergedShowRequireMark: mergedShowRequireMarkRef,\n        mergedRequireMarkPlacement: mergedRequireMarkPlacementRef,\n        mergedValidationStatus: mergedValidationStatusRef,\n        mergedShowFeedback: mergedShowFeedbackRef,\n        mergedShowLabel: mergedShowLabelRef\n    };\n}\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function formItemRule(props) {\n    const NForm = inject(formInjectionKey, null);\n    const compatibleRulePathRef = computed(() => {\n        const { rulePath } = props;\n        if (rulePath !== undefined)\n            return rulePath;\n        const { path } = props;\n        if (path !== undefined)\n            return path;\n        return undefined;\n    });\n    const mergedRulesRef = computed(() => {\n        const rules = [];\n        const { rule } = props;\n        if (rule !== undefined) {\n            if (Array.isArray(rule))\n                rules.push(...rule);\n            else\n                rules.push(rule);\n        }\n        if (NForm) {\n            const { rules: formRules } = NForm.props;\n            const { value: rulePath } = compatibleRulePathRef;\n            if (formRules !== undefined && rulePath !== undefined) {\n                const formRule = get(formRules, rulePath);\n                if (formRule !== undefined) {\n                    if (Array.isArray(formRule)) {\n                        rules.push(...formRule);\n                    }\n                    else {\n                        // terminate object must be a form item rule\n                        rules.push(formRule);\n                    }\n                }\n            }\n        }\n        return rules;\n    });\n    const hasRequiredRuleRef = computed(() => {\n        return mergedRulesRef.value.some((rule) => rule.required);\n    });\n    // deprecated\n    const mergedRequiredRef = computed(() => {\n        return hasRequiredRuleRef.value || props.required;\n    });\n    return {\n        mergedRules: mergedRulesRef,\n        mergedRequired: mergedRequiredRef\n    };\n}\n","import { c } from '../../_utils/cssr';\nimport commonVariables from '../common/_common';\nconst {\n  cubicBezierEaseInOut\n} = commonVariables;\nexport function fadeDownTransition({\n  name = 'fade-down',\n  fromOffset = '-4px',\n  enterDuration = '.3s',\n  leaveDuration = '.3s',\n  enterCubicBezier = cubicBezierEaseInOut,\n  leaveCubicBezier = cubicBezierEaseInOut\n} = {}) {\n  return [c(`&.${name}-transition-enter-from, &.${name}-transition-leave-to`, {\n    opacity: 0,\n    transform: `translateY(${fromOffset})`\n  }), c(`&.${name}-transition-enter-to, &.${name}-transition-leave-from`, {\n    opacity: 1,\n    transform: 'translateY(0)'\n  }), c(`&.${name}-transition-leave-active`, {\n    transition: `opacity ${leaveDuration} ${leaveCubicBezier}, transform ${leaveDuration} ${leaveCubicBezier}`\n  }), c(`&.${name}-transition-enter-active`, {\n    transition: `opacity ${enterDuration} ${enterCubicBezier}, transform ${enterDuration} ${enterCubicBezier}`\n  })];\n}","import { cB, cE, cM, c } from '../../../_utils/cssr';\nimport { fadeDownTransition } from '../../../_styles/transitions/fade-down.cssr'; // vars:\n// --n-line-height\n// --n-blank-height\n// --n-feedback-padding\n// --n-feedback-font-size\n// --n-label-font-size-left\n// --n-label-font-size-top\n// --n-label-height\n// --n-label-padding\n// --n-asterisk-color\n// --n-label-text-color\n// --n-bezier\n// --n-feedback-text-color\n// --n-feedback-text-color-warning\n// --n-feedback-text-color-error\n// --n-label-text-align\n// --n-label-padding\n\nexport default cB('form-item', {\n  display: 'grid',\n  lineHeight: 'var(--n-line-height)'\n}, [cB('form-item-label', `\n grid-area: label;\n align-items: center;\n line-height: 1.25;\n text-align: var(--n-label-text-align);\n font-size: var(--n-label-font-size);\n height: var(--n-label-height);\n padding: var(--n-label-padding);\n color: var(--n-label-text-color);\n transition: color .3s var(--n-bezier);\n box-sizing: border-box;\n `, [cE('asterisk', `\n user-select: none;\n -webkit-user-select: none;\n color: var(--n-asterisk-color);\n transition: color .3s var(--n-bezier);\n `), cE('asterisk-placeholder', `\n user-select: none;\n -webkit-user-select: none;\n visibility: hidden; \n `)]), cB('form-item-blank', {\n  gridArea: 'blank',\n  minHeight: 'var(--n-blank-height)'\n}), cM('left-labelled', `\n grid-template-areas:\n \"label blank\"\n \"label feedback\";\n grid-template-columns: auto minmax(0, 1fr);\n `, [cB('form-item-label', `\n height: var(--n-blank-height);\n line-height: var(--n-blank-height);\n box-sizing: border-box;\n white-space: nowrap;\n flex-shrink: 0;\n flex-grow: 0;\n `)]), cM('top-labelled', `\n grid-template-areas:\n \"label\"\n \"blank\"\n \"feedback\";\n grid-template-rows: var(--n-label-height) 1fr;\n grid-template-columns: minmax(0, 100%);\n `, [cM('no-label', `\n grid-template-areas:\n \"blank\"\n \"feedback\";\n grid-template-rows: 1fr;\n `), cB('form-item-label', {\n  display: 'flex',\n  alignItems: 'flex-end',\n  justifyContent: 'var(--n-label-text-align)'\n})]), cB('form-item-blank', `\n box-sizing: border-box;\n display: flex;\n align-items: center;\n position: relative;\n `), cB('form-item-feedback-wrapper', `\n grid-area: feedback;\n box-sizing: border-box;\n min-height: var(--n-feedback-height);\n font-size: var(--n-feedback-font-size);\n line-height: 1.25;\n transform-origin: top left;\n `, [c('&:not(:empty)', `\n padding: var(--n-feedback-padding);\n `), cB('form-item-feedback', {\n  transition: 'color .3s var(--n-bezier)',\n  color: 'var(--n-feedback-text-color)'\n}, [cM('warning', {\n  color: 'var(--n-feedback-text-color-warning)'\n}), cM('error', {\n  color: 'var(--n-feedback-text-color-error)'\n}), fadeDownTransition({\n  fromOffset: '-3px',\n  enterDuration: '.3s',\n  leaveDuration: '.2s'\n})])])]);","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { h, defineComponent, computed, toRef, ref, provide, inject, watch, Transition, onMounted } from 'vue';\nimport Schema from 'async-validator';\nimport { get } from 'lodash-es';\nimport { createId } from 'seemly';\nimport { formItemInjectionKey } from '../../_mixins/use-form-item';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { warn, createKey, useInjectionInstanceCollection, keysOf, resolveWrappedSlot } from '../../_utils';\nimport { formLight } from '../styles';\nimport { formItemMisc, formItemSize, formItemRule } from './utils';\nimport { formInjectionKey, formItemInstsInjectionKey } from './context';\nimport style from './styles/form-item.cssr';\nexport const formItemProps = Object.assign(Object.assign({}, useTheme.props), { label: String, labelWidth: [Number, String], labelStyle: [String, Object], labelAlign: String, labelPlacement: String, path: String, first: Boolean, rulePath: String, required: Boolean, showRequireMark: {\n        type: Boolean,\n        default: undefined\n    }, requireMarkPlacement: String, showFeedback: {\n        type: Boolean,\n        default: undefined\n    }, rule: [Object, Array], size: String, ignorePathChange: Boolean, validationStatus: String, feedback: String, showLabel: {\n        type: Boolean,\n        default: undefined\n    }, labelProps: Object });\nexport const formItemPropKeys = keysOf(formItemProps);\n// wrap sync validator\nfunction wrapValidator(validator, async) {\n    return (...args) => {\n        try {\n            const validateResult = validator(...args);\n            if ((!async &&\n                (typeof validateResult === 'boolean' ||\n                    validateResult instanceof Error ||\n                    Array.isArray(validateResult))) || // Error[]\n                (validateResult === null || validateResult === void 0 ? void 0 : validateResult.then)) {\n                return validateResult;\n            }\n            else if (validateResult === undefined) {\n                return true;\n            }\n            else {\n                warn('form-item/validate', `You return a ${typeof validateResult} ` +\n                    'typed value in the validator method, which is not recommended. Please use ' +\n                    (async ? '`Promise`' : '`boolean`, `Error` or `Promise`') +\n                    ' typed value instead.');\n                return true;\n            }\n        }\n        catch (err) {\n            warn('form-item/validate', 'An error is catched in the validation, ' +\n                \"so the validation won't be done. Your callback in `validate` method of \" +\n                \"`n-form` or `n-form-item` won't be called in this validation.\");\n            console.error(err);\n            // If returns undefined, async-validator won't trigger callback\n            // so the result will be abandoned, which means not true and not false\n            return undefined;\n        }\n    };\n}\nexport default defineComponent({\n    name: 'FormItem',\n    props: formItemProps,\n    setup(props) {\n        useInjectionInstanceCollection(formItemInstsInjectionKey, 'formItems', toRef(props, 'path'));\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const NForm = inject(formInjectionKey, null);\n        const formItemSizeRefs = formItemSize(props);\n        const formItemMiscRefs = formItemMisc(props);\n        const { validationErrored: validationErroredRef } = formItemMiscRefs;\n        const { mergedRequired: mergedRequiredRef, mergedRules: mergedRulesRef } = formItemRule(props);\n        const { mergedSize: mergedSizeRef } = formItemSizeRefs;\n        const { mergedLabelPlacement: labelPlacementRef, mergedLabelAlign: labelTextAlignRef } = formItemMiscRefs;\n        const renderExplainsRef = ref([]);\n        const feedbackIdRef = ref(createId());\n        const mergedDisabledRef = NForm\n            ? toRef(NForm.props, 'disabled')\n            : ref(false);\n        const themeRef = useTheme('Form', '-form-item', style, formLight, props, mergedClsPrefixRef);\n        watch(toRef(props, 'path'), () => {\n            if (props.ignorePathChange)\n                return;\n            restoreValidation();\n        });\n        function restoreValidation() {\n            renderExplainsRef.value = [];\n            validationErroredRef.value = false;\n            if (props.feedback) {\n                feedbackIdRef.value = createId();\n            }\n        }\n        function handleContentBlur() {\n            void internalValidate('blur');\n        }\n        function handleContentChange() {\n            void internalValidate('change');\n        }\n        function handleContentFocus() {\n            void internalValidate('focus');\n        }\n        function handleContentInput() {\n            void internalValidate('input');\n        }\n        function validate(options, callback) {\n            return __awaiter(this, void 0, void 0, function* () {\n                /** the following code is for compatibility */\n                let trigger;\n                let validateCallback;\n                let shouldRuleBeApplied;\n                let asyncValidatorOptions;\n                if (typeof options === 'string') {\n                    trigger = options;\n                    validateCallback = callback;\n                }\n                else if (options !== null && typeof options === 'object') {\n                    trigger = options.trigger;\n                    validateCallback = options.callback;\n                    shouldRuleBeApplied = options.shouldRuleBeApplied;\n                    asyncValidatorOptions = options.options;\n                }\n                return yield new Promise((resolve, reject) => {\n                    void internalValidate(trigger, shouldRuleBeApplied, asyncValidatorOptions).then(({ valid, errors }) => {\n                        if (valid) {\n                            if (validateCallback) {\n                                validateCallback();\n                            }\n                            resolve();\n                        }\n                        else {\n                            if (validateCallback) {\n                                validateCallback(errors);\n                            }\n                            reject(errors);\n                        }\n                    });\n                });\n            });\n        }\n        const internalValidate = (trigger = null, shouldRuleBeApplied = () => true, options = {\n            suppressWarning: true\n        }) => __awaiter(this, void 0, void 0, function* () {\n            const { path } = props;\n            if (!options) {\n                options = {};\n            }\n            else {\n                if (!options.first)\n                    options.first = props.first;\n            }\n            const { value: rules } = mergedRulesRef;\n            const value = NForm ? get(NForm.props.model, path || '') : undefined;\n            const messageRenderers = {};\n            const originalMessageRendersMessage = {};\n            const activeRules = (!trigger\n                ? rules\n                : rules.filter((rule) => {\n                    if (Array.isArray(rule.trigger)) {\n                        return rule.trigger.includes(trigger);\n                    }\n                    else {\n                        return rule.trigger === trigger;\n                    }\n                }))\n                .filter(shouldRuleBeApplied)\n                .map((rule, i) => {\n                const shallowClonedRule = Object.assign({}, rule);\n                if (shallowClonedRule.validator) {\n                    shallowClonedRule.validator = wrapValidator(shallowClonedRule.validator, false);\n                }\n                if (shallowClonedRule.asyncValidator) {\n                    shallowClonedRule.asyncValidator = wrapValidator(shallowClonedRule.asyncValidator, true);\n                }\n                if (shallowClonedRule.renderMessage) {\n                    const rendererKey = `__renderMessage__${i}`;\n                    originalMessageRendersMessage[rendererKey] =\n                        shallowClonedRule.message;\n                    shallowClonedRule.message = rendererKey;\n                    messageRenderers[rendererKey] = shallowClonedRule.renderMessage;\n                }\n                return shallowClonedRule;\n            });\n            if (!activeRules.length) {\n                return {\n                    valid: true\n                };\n            }\n            const mergedPath = path !== null && path !== void 0 ? path : '__n_no_path__';\n            const validator = new Schema({ [mergedPath]: activeRules });\n            const { validateMessages } = (NForm === null || NForm === void 0 ? void 0 : NForm.props) || {};\n            if (validateMessages) {\n                validator.messages(validateMessages);\n            }\n            return yield new Promise((resolve) => {\n                void validator.validate({ [mergedPath]: value }, options, (errors) => {\n                    if (errors === null || errors === void 0 ? void 0 : errors.length) {\n                        renderExplainsRef.value = errors.map((error) => {\n                            const transformedMessage = (error === null || error === void 0 ? void 0 : error.message) || '';\n                            return {\n                                key: transformedMessage,\n                                render: () => {\n                                    if (transformedMessage.startsWith('__renderMessage__')) {\n                                        return messageRenderers[transformedMessage]();\n                                    }\n                                    return transformedMessage;\n                                }\n                            };\n                        });\n                        errors.forEach((error) => {\n                            var _a;\n                            if ((_a = error.message) === null || _a === void 0 ? void 0 : _a.startsWith('__renderMessage__')) {\n                                error.message = originalMessageRendersMessage[error.message];\n                            }\n                        });\n                        validationErroredRef.value = true;\n                        resolve({\n                            valid: false,\n                            errors\n                        });\n                    }\n                    else {\n                        restoreValidation();\n                        resolve({\n                            valid: true\n                        });\n                    }\n                });\n            });\n        });\n        provide(formItemInjectionKey, {\n            path: toRef(props, 'path'),\n            disabled: mergedDisabledRef,\n            mergedSize: formItemSizeRefs.mergedSize,\n            mergedValidationStatus: formItemMiscRefs.mergedValidationStatus,\n            restoreValidation,\n            handleContentBlur,\n            handleContentChange,\n            handleContentFocus,\n            handleContentInput\n        });\n        const exposedRef = {\n            validate,\n            restoreValidation,\n            internalValidate\n        };\n        const labelElementRef = ref(null);\n        onMounted(() => {\n            if (labelElementRef.value !== null) {\n                NForm === null || NForm === void 0 ? void 0 : NForm.deriveMaxChildLabelWidth(Number(getComputedStyle(labelElementRef.value).width.slice(0, -2)));\n            }\n        });\n        const cssVarsRef = computed(() => {\n            var _a;\n            const { value: size } = mergedSizeRef;\n            const { value: labelPlacement } = labelPlacementRef;\n            const direction = labelPlacement === 'top' ? 'vertical' : 'horizontal';\n            const { common: { cubicBezierEaseInOut }, self: { labelTextColor, asteriskColor, lineHeight, feedbackTextColor, feedbackTextColorWarning, feedbackTextColorError, feedbackPadding, [createKey('labelHeight', size)]: labelHeight, [createKey('blankHeight', size)]: blankHeight, [createKey('feedbackFontSize', size)]: feedbackFontSize, [createKey('feedbackHeight', size)]: feedbackHeight, [createKey('labelPadding', direction)]: labelPadding, [createKey('labelTextAlign', direction)]: labelTextAlign, [createKey(createKey('labelFontSize', labelPlacement), size)]: labelFontSize } } = themeRef.value;\n            let mergedLabelTextAlign = (_a = labelTextAlignRef.value) !== null && _a !== void 0 ? _a : labelTextAlign;\n            if (labelPlacement === 'top') {\n                mergedLabelTextAlign =\n                    mergedLabelTextAlign === 'right' ? 'flex-end' : 'flex-start';\n            }\n            const cssVars = {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-line-height': lineHeight,\n                '--n-blank-height': blankHeight,\n                '--n-label-font-size': labelFontSize,\n                '--n-label-text-align': mergedLabelTextAlign,\n                '--n-label-height': labelHeight,\n                '--n-label-padding': labelPadding,\n                '--n-asterisk-color': asteriskColor,\n                '--n-label-text-color': labelTextColor,\n                '--n-feedback-padding': feedbackPadding,\n                '--n-feedback-font-size': feedbackFontSize,\n                '--n-feedback-height': feedbackHeight,\n                '--n-feedback-text-color': feedbackTextColor,\n                '--n-feedback-text-color-warning': feedbackTextColorWarning,\n                '--n-feedback-text-color-error': feedbackTextColorError\n            };\n            return cssVars;\n        });\n        const themeClassHandle = useThemeClass('form-item', computed(() => {\n            var _a;\n            return `${mergedSizeRef.value[0]}${labelPlacementRef.value[0]}${((_a = labelTextAlignRef.value) === null || _a === void 0 ? void 0 : _a[0]) || ''}`;\n        }), cssVarsRef, props);\n        return Object.assign(Object.assign(Object.assign(Object.assign({ labelElementRef, mergedClsPrefix: mergedClsPrefixRef, mergedRequired: mergedRequiredRef, feedbackId: feedbackIdRef, renderExplains: renderExplainsRef }, formItemMiscRefs), formItemSizeRefs), exposedRef), { cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        var _a;\n        const { $slots, mergedClsPrefix, mergedShowLabel, mergedShowRequireMark, mergedRequireMarkPlacement, onRender } = this;\n        const renderedShowRequireMark = mergedShowRequireMark !== undefined\n            ? mergedShowRequireMark\n            : this.mergedRequired;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-form-item`,\n                this.themeClass,\n                `${mergedClsPrefix}-form-item--${this.mergedSize}-size`,\n                `${mergedClsPrefix}-form-item--${this.mergedLabelPlacement}-labelled`,\n                !mergedShowLabel && `${mergedClsPrefix}-form-item--no-label`\n            ], style: this.cssVars },\n            mergedShowLabel && (this.label || $slots.label) ? (h(\"label\", Object.assign({}, this.labelProps, { class: [\n                    (_a = this.labelProps) === null || _a === void 0 ? void 0 : _a.class,\n                    `${mergedClsPrefix}-form-item-label`\n                ], style: this.mergedLabelStyle, ref: \"labelElementRef\" }),\n                mergedRequireMarkPlacement !== 'left'\n                    ? $slots.label\n                        ? $slots.label()\n                        : this.label\n                    : null,\n                renderedShowRequireMark ? (h(\"span\", { class: `${mergedClsPrefix}-form-item-label__asterisk` }, mergedRequireMarkPlacement !== 'left' ? '\\u00A0*' : '*\\u00A0')) : (mergedRequireMarkPlacement === 'right-hanging' && (h(\"span\", { class: `${mergedClsPrefix}-form-item-label__asterisk-placeholder` }, '\\u00A0*'))),\n                mergedRequireMarkPlacement === 'left'\n                    ? $slots.label\n                        ? $slots.label()\n                        : this.label\n                    : null)) : null,\n            h(\"div\", { class: [\n                    `${mergedClsPrefix}-form-item-blank`,\n                    this.mergedValidationStatus &&\n                        `${mergedClsPrefix}-form-item-blank--${this.mergedValidationStatus}`\n                ] }, $slots),\n            this.mergedShowFeedback ? (h(\"div\", { key: this.feedbackId, class: `${mergedClsPrefix}-form-item-feedback-wrapper` },\n                h(Transition, { name: \"fade-down-transition\", mode: \"out-in\" }, {\n                    default: () => {\n                        const { mergedValidationStatus } = this;\n                        return resolveWrappedSlot($slots.feedback, (children) => {\n                            var _a;\n                            const { feedback } = this;\n                            const feedbackNodes = children || feedback ? (h(\"div\", { key: \"__feedback__\", class: `${mergedClsPrefix}-form-item-feedback__line` }, children || feedback)) : this.renderExplains.length ? ((_a = this.renderExplains) === null || _a === void 0 ? void 0 : _a.map(({ key, render }) => (h(\"div\", { key: key, class: `${mergedClsPrefix}-form-item-feedback__line` }, render())))) : null;\n                            return feedbackNodes ? (mergedValidationStatus === 'warning' ? (h(\"div\", { key: \"controlled-warning\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--warning` }, feedbackNodes)) : mergedValidationStatus === 'error' ? (h(\"div\", { key: \"controlled-error\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--error` }, feedbackNodes)) : mergedValidationStatus === 'success' ? (h(\"div\", { key: \"controlled-success\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--success` }, feedbackNodes)) : (h(\"div\", { key: \"controlled-default\", class: `${mergedClsPrefix}-form-item-feedback` }, feedbackNodes))) : null;\n                        });\n                    }\n                }))) : null));\n    }\n});\n","import { createInjectionKey } from '../../_utils';\nexport const formInjectionKey = createInjectionKey('n-form');\nexport const formItemInstsInjectionKey = createInjectionKey('n-form-item-insts');\n","export default {\n    feedbackPadding: '4px 0 0 2px',\n    feedbackHeightSmall: '24px',\n    feedbackHeightMedium: '24px',\n    feedbackHeightLarge: '26px',\n    feedbackFontSizeSmall: '13px',\n    feedbackFontSizeMedium: '14px',\n    feedbackFontSizeLarge: '14px',\n    labelFontSizeLeftSmall: '14px',\n    labelFontSizeLeftMedium: '14px',\n    labelFontSizeLeftLarge: '15px',\n    labelFontSizeTopSmall: '13px',\n    labelFontSizeTopMedium: '14px',\n    labelFontSizeTopLarge: '14px',\n    labelHeightSmall: '24px',\n    labelHeightMedium: '26px',\n    labelHeightLarge: '28px',\n    labelPaddingVertical: '0 0 6px 2px',\n    labelPaddingHorizontal: '0 12px 0 0',\n    labelTextAlignVertical: 'left',\n    labelTextAlignHorizontal: 'right'\n};\n","import { commonLight } from '../../_styles/common';\nimport commonVariables from './_common';\nexport const self = (vars) => {\n    const { heightSmall, heightMedium, heightLarge, textColor1, errorColor, warningColor, lineHeight, textColor3 } = vars;\n    return Object.assign(Object.assign({}, commonVariables), { blankHeightSmall: heightSmall, blankHeightMedium: heightMedium, blankHeightLarge: heightLarge, lineHeight, labelTextColor: textColor1, asteriskColor: errorColor, feedbackTextColorError: errorColor, feedbackTextColorWarning: warningColor, feedbackTextColor: textColor3 });\n};\nconst formLight = {\n    name: 'Form',\n    common: commonLight,\n    self\n};\nexport default formLight;\n"],"names":["_hoisted_1","xmlns","viewBox","_hoisted_2","_createElementVNode","d","fill","_hoisted_3","defineComponent","name","render","_ctx","_cache","_openBlock","_createElementBlock","cB","cM","width","marginRight","c","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","formProps","Object","assign","useTheme","inline","Boolean","labelWidth","Number","String","labelAlign","labelPlacement","type","default","model","rules","disabled","size","showRequireMark","undefined","requireMarkPlacement","showFeedback","onSubmit","Function","preventDefault","showLabel","validateMessages","props","setup","mergedClsPrefixRef","useConfig","style","formLight","formItems","maxChildLabelWidthRef","ref","deriveMaxChildLabelWidth","currentWidth","currentMaxChildLabelWidth","validate","validateCallback","shouldRuleBeApplied","this","formItemValidationPromises","key","keysOf","formItemInstances","formItemInstance","path","push","internalValidate","all","results","some","valid","errors","filter","map","restoreValidation","provide","formInjectionKey","formItemInstsInjectionKey","formExposedMethod","mergedClsPrefix","h","class","$slots","formatRegExp","warning","convertFieldsError","length","fields","forEach","error","field","format","template","args","arguments","i","len","str","replace","x","JSON","stringify","_","isNativeStringType","isEmptyValue","Array","isArray","asyncParallelArray","arr","func","callback","total","arrLength","count","a","asyncSerialArray","index","original","flattenObjArr","objArr","ret","keys","k","AsyncValidationError","_this","_inheritsLoose","Error","asyncMap","option","source","first","pending","flattenArr","firstFields","objArrKeys","objArrLength","indexOf","isErrorObj","obj","message","getValue","v","complementError","rule","oe","fieldValue","fullFields","fullField","deepMerge","target","s","hasOwnProperty","urlReg","required","options","messages","whitespace","test","word","b","includeBoundaries","v4","v6seg","v6","trim","v46Exact","RegExp","v4exact","v6exact","ip","exact","protocol","auth","ipv4","ipv6","host","domain","tld","port","regex","pattern","email","hex","types","integer","number","parseInt","array","regexp","date","getTime","getMonth","getYear","isNaN","object","method","match","url","getUrlRegex","custom","ruleType","range","min","max","spRegexp","val","num","ENUM","enumerable","join","lastIndex","mismatch","_pattern","enum","enumRule","string","boolean","floatFn","dateObject","Date","any","float","enumValidator","newMessages","parse","invalid","clone","cloned","Schema","descriptor","_messages","defaultMessages","define","item","source_","o","oc","complete","add","concat","series","z","_this2","r","transform","validator","getValidationMethod","getType","errorFields","data","doIt","res","deep","defaultField","addFullField","schema","cb","errorList","suppressWarning","filledErrors","fieldsSchema","paredFieldsSchema","fieldSchema","fieldSchemaList","bind","errs","finalErrors","asyncValidator","console","suppressValidatorError","setTimeout","validators","messageIndex","splice","register","useInjectionInstanceCollection","injectionName","collectionKey","registerKeyRef","_a","injection","inject","vm","getCurrentInstance","proxy","registerInstance","oldKey","collection","removeInstance","addInstance","findIndex","instance","watch","onBeforeUnmount","formItemSize","NForm","mergedSize","computed","formItemMisc","mergedLabelWidthRef","mergedLabelPlacementRef","formatLength","autoComputedWidth","mergedLabelAlignRef","mergedLabelStyleRef","labelProps","labelStyle","mergedShowRequireMarkRef","mergedRequireMarkPlacementRef","validationErroredRef","mergedValidationStatusRef","validationStatus","mergedShowFeedbackRef","mergedShowLabelRef","validationErrored","mergedLabelStyle","mergedLabelPlacement","mergedLabelAlign","mergedShowRequireMark","mergedRequireMarkPlacement","mergedValidationStatus","mergedShowFeedback","mergedShowLabel","formItemRule","compatibleRulePathRef","rulePath","mergedRulesRef","formRules","formRule","get","hasRequiredRuleRef","mergedRequiredRef","mergedRules","mergedRequired","cubicBezierEaseInOut","commonVariables","fadeDownTransition","fromOffset","enterDuration","leaveDuration","enterCubicBezier","leaveCubicBezier","opacity","transition","display","lineHeight","cE","gridArea","minHeight","alignItems","justifyContent","color","formItemProps","label","ignorePathChange","feedback","wrapValidator","async","validateResult","warn","err","toRef","inlineThemeDisabled","formItemSizeRefs","formItemMiscRefs","mergedSizeRef","labelPlacementRef","labelTextAlignRef","renderExplainsRef","feedbackIdRef","createId","mergedDisabledRef","themeRef","handleContentBlur","handleContentChange","handleContentFocus","handleContentInput","trigger","asyncValidatorOptions","messageRenderers","originalMessageRendersMessage","activeRules","includes","shallowClonedRule","renderMessage","rendererKey","mergedPath","transformedMessage","startsWith","formItemInjectionKey","exposedRef","labelElementRef","onMounted","getComputedStyle","slice","cssVarsRef","direction","common","self","labelTextColor","asteriskColor","feedbackTextColor","feedbackTextColorWarning","feedbackTextColorError","feedbackPadding","createKey","labelHeight","blankHeight","feedbackFontSize","feedbackHeight","labelPadding","labelTextAlign","labelFontSize","mergedLabelTextAlign","cssVars","themeClassHandle","useThemeClass","feedbackId","renderExplains","themeClass","onRender","renderedShowRequireMark","Transition","mode","resolveWrappedSlot","children","feedbackNodes","createInjectionKey","feedbackHeightSmall","feedbackHeightMedium","feedbackHeightLarge","feedbackFontSizeSmall","feedbackFontSizeMedium","feedbackFontSizeLarge","labelFontSizeLeftSmall","labelFontSizeLeftMedium","labelFontSizeLeftLarge","labelFontSizeTopSmall","labelFontSizeTopMedium","labelFontSizeTopLarge","labelHeightSmall","labelHeightMedium","labelHeightLarge","labelPaddingVertical","labelPaddingHorizontal","labelTextAlignVertical","labelTextAlignHorizontal","vars","heightSmall","heightMedium","heightLarge","textColor1","errorColor","warningColor","textColor3","blankHeightSmall","blankHeightMedium","blankHeightLarge","commonLight"],"sourceRoot":""}